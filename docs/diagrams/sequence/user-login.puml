@startuml
actor "Frontend" as FE
participant "AuthController" as AC
participant "AuthService" as AS
participant "UserRepository" as UR
participant "HashEncoder" as HE
participant "JwtService" as JS
database "PostgreSQL" as DB
participant "RefreshTokenRepository" as RTR

FE -> AC: login(email, password)
AC -> AS: login(email, password)

AS -> UR: findByEmail(email)
UR -> DB: SELECT * FROM users WHERE email=?
alt user not found
    DB --> UR: null
    UR --> AS: null
    AS -> AC: throw BadCredentialsException
    AC --> FE: throw BadCredentialsException
else user found
    DB --> UR: User
    UR --> AS: User
    AS -> HE: matches(password, user.hashedPassword)
    alt password mismatch
        HE --> AS: false
        AS -> AC: throw BadCredentialsException
        AC --> FE: throw BadCredentialsException
    else password matches
        HE --> AS: true
        AS -> JS: generateAccessToken(user.id)
        JS --> AS: accessToken
        AS -> JS: generateRefreshToken(user.id)
        JS --> AS: refreshToken
        AS -> RTR: save(user.id, refreshToken)
        RTR -> DB: INSERT INTO refresh_tokens(...)
        DB --> RTR: saved
        RTR --> AS:
        AS --> AC: TokenPair(accessToken, refreshToken)
        AC --> FE: TokenPair(accessToken, refreshToken)
    end
end
@enduml
